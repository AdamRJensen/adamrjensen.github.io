{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "b6b4f91d",
   "metadata": {},
   "source": [
    "# Using GroupBy to remove 'data islands'\n",
    "As anyone who has dealt with measurement data knows, missing and errornous data is inevitable. Applying automatic quality control procedures can improve the data quality, however, due to the imperfect nature of such methods, the final dataset often contains many short periods of questionable data called 'data islands'. In this blog post, I'll show you how you can remove gappy sections of data and remove data islands using GroupBy.\n",
    "\n",
    "```{post} \n",
    ":tags: pvlib, solar, open science, gsoc\n",
    ":author: Adam R. Jensen\n",
    "```\n",
    "First, let's import the necessary libraries:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "510b7714",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e7589ec4",
   "metadata": {
    "tags": [
     "remove_cell"
    ]
   },
   "source": [
    "## Part 1: Remove days with more than 30% missing data\n",
    "\n",
    "In part 1, I'll demonstrate how periods with gappy data can be removed based on a desired threshold. The example will demonstrate how days with more than 30% missing data can be removed."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "08a6b957",
   "metadata": {
    "tags": [
     "remove_cell"
    ]
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Generate synthetic irradiance data\n",
    "df = pd.DataFrame(index=pd.date_range('2021-06-11', periods=1440*3, freq='1min'))\n",
    "df['GHI'] = -1000*np.cos(2*np.pi*(np.arange(1440*3))/1440)\n",
    "df['GHI'] = df['GHI'].clip(lower=0)\n",
    "\n",
    "# Simulate gappy data by removing measurements during specific periods\n",
    "df.loc['2021-06-11 07:00':'2021-06-11 13:25', 'GHI'] = np.nan\n",
    "df.loc['2021-06-11 14:45':'2021-06-11 16:20', 'GHI'] = np.nan\n",
    "df.loc['2021-06-12 15:10':'2021-06-12 15:40', 'GHI'] = np.nan\n",
    "\n",
    "df.plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f6d222d",
   "metadata": {
    "tags": [
     "remove_cell"
    ]
   },
   "source": [
    "The first step is to determine where data is missing, which can be done using the `.isna()` function. When applied to a column, it returns a boolean Series, where True corresponds to a missing value.\n",
    "\n",
    "In this example, we want to check the missing data amount for each date, hence we want to group by dates. The `GroupBy` function takes a Series of identifiers, where all rows with the same identifier is grouped together. We can get the date for from the index.\n",
    "\n",
    "Once the data has been grouped into relevant sub-groups, we want to apply some kind of function to each group. In this case we want to calculate the fraction of missing data, which can be done by taking the mean of the `missing` column. By using `.transform()` the original index is retained."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5f83c580",
   "metadata": {
    "tags": [
     "remove_cell"
    ]
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Generate boolean series of whether GHI is missing or not\n",
    "df['missing'] = df['GHI'].isna()\n",
    "\n",
    "threshold = 0.3  # threshold value\n",
    "df['missing_daily_fraction'] = df.groupby(df.index.date)['missing'].transform('mean')\n",
    "\n",
    "df.loc[df['missing_daily_fraction'] >= threshold, 'GHI'] = np.nan\n",
    "\n",
    "df['GHI'].plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "87639125",
   "metadata": {
    "tags": [
     "remove_cell"
    ]
   },
   "source": [
    "The threshold of 30% per day was arbitrary chosen can be easily modified. The threshold could be changed to be minimum 30% per hour instead, only requireing a minor modification to the GroupBy."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "425515e2",
   "metadata": {},
   "source": [
    "## Part 2 - Removing Data Islands\n",
    "\n",
    "Create a dataframe with fictional solar irradiance data with multiple missing entires:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "ccecb550",
   "metadata": {},
   "outputs": [],
   "source": [
    "index = pd.date_range('2021-06-11 06', periods=720, freq='1min')\n",
    "\n",
    "GHI = -1000 * np.cos(2 * np.pi * np.linspace(0.25, 0.75 ,720))\n",
    "\n",
    "df = pd.DataFrame(index=index, data={'GHI': GHI})\n",
    "\n",
    "# remove periods of data\n",
    "df.loc['2021-06-11 09:50':'2021-06-11 09:55', 'GHI'] = np.nan\n",
    "df.loc['2021-06-11 10:00':'2021-06-11 10:25', 'GHI'] = np.nan\n",
    "df.loc['2021-06-11 10:35':'2021-06-11 10:40', 'GHI'] = np.nan\n",
    "df.loc['2021-06-11 10:45':'2021-06-11 11:20', 'GHI'] = np.nan\n",
    "df.loc['2021-06-11 11:30':'2021-06-11 12:40', 'GHI'] = np.nan\n",
    "df.loc['2021-06-11 15:30':'2021-06-11 15:50', 'GHI'] = np.nan"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8731bc86",
   "metadata": {},
   "source": [
    "Visualize the time series:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "390ce9e2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAX0AAADCCAYAAAClkhJFAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjQuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8rg+JYAAAACXBIWXMAAAsTAAALEwEAmpwYAAAkaklEQVR4nO3deVxVZf7A8c+XRRR3FBHFXdwVUbLMrNzSlklbNGzRxhqtNK1pmmxaZmrG9rHUVptMx1xKM7XSykFbHEsDxB0EN0RRUFxQZH9+f3CcH+OAIhfuucv3/Xrd1zn3uefc833g8r2H5zznecQYg1JKKe/gY3cASimlnEeTvlJKeRFN+kop5UU06SullBfRpK+UUl5Ek75SSnkRP7sDuJTGjRub1q1b2x2GUkq5lbi4uGPGmOALy10+6bdu3ZrY2Fi7w1BKKbciIgfKKr9k846IzBGRDBHZXqosSETWiEiytWxY6rWnRSRFRJJEZGip8t4iss16baaIiKOVUkopdXkq0qY/Fxh2QdlUIMYYEw7EWM8RkS5ANNDV2uddEfG19nkPGA+EW48L31MppVQ1u2TSN8b8CGRdUDwcmGetzwNGlCpfbIzJM8bsA1KAPiISCtQzxvxsSsZ9+GepfZRSSjlJZXvvhBhj0gGsZROrvDlwsNR2aVZZc2v9wnKllFJOVNUXcstqpzcXKS/7TUTGU9IURMuWLasmMqUsxhjSTpwj4eBJthw8SdvgOtx9pX7OlHeobNI/KiKhxph0q+kmwypPA1qU2i4MOGyVh5VRXiZjzGxgNkBUVJQOA6qqzKyYZD7esJ+ss/kABPj5MLqPvQn/YFYOS+PSuK5jMBFhDfD10T4OqvpUNumvBMYCr1jLFaXKF4rIdKAZJRdsNxljikQkW0SuAjYCY4BZDkWuVCWE1K/J4M5NiGjRgIiwBnRsWhd/X3vvUUw4eJJZa5OZEZNM/Vr+XBPemOs6BDOoUxMa1QmwNTbleeRS4+mLyCLgeqAxcBT4M7Ac+AxoCaQCI40xWdb2zwDjgELgMWPMaqs8ipKeQLWA1cCjpgKD+UdFRRntp6883cmcfNanHOOHpEx+2J1JRnYevj5C37aNuLlHKEO7NiWodg27w1RuRETijDFR/1Pu6pOoaNJX3sYYw87006zedoSvth5m//EcfH2E6zoEMyqqBYM6N7H9vxPl+jTpK+WGzn8BfLU1nWXxaRw9nUfjOjW4LbI5o/u0pG1wHbtDVC5Kk77yCPmFxdTw886z3MKiYn5MzuTTXw8SsyuDwmLDgI7BPHBNW/q1b4Te5K5K06Sv3JYxhnVJGbz/w17aBdfh5du72x2S7TKz81iw8QCf/HKAY2fy6dS0Lg9c04YRkc216UcB5Sd9/XQol7dhz3HGzY3lYFYOnUPr2h2OSwiuG8Bjgzuw/qmBvH5nDwCeXLqVAW98z6JNqeQXFtscoXJVeqavXI4xhjU7j/L1tnTeHNUTEfhm+xEGdwnRs9hynP9vaMa/ktmSdormDWrxyIB23Nk7jAA/30u/gfI42ryj3MLGvcd59ZtE4lNP0ja4NgsfvIqm9WvaHZbbMMbww+5MZsQkszn1JC2CavHUsE7c3D1U2/y9jCZ95dJSj+fwly93sDYxg5B6JU0XI3uH4adn9pVyPvm/sjqRxCPZ9GzRgGdu7swVrYPsDk05SXlJ3+UnUVHewddX2HboFE8N68T9V7emVg1tknCEiHB9xyb0Dw9mWXwab3yXxMj3f+aGLiE8e3MXWjYKtDtEZRM901cuw5u7Y1a3c/lFfLR+L+99v4fCYsPEAe2ZcF1bbe/3YNp7R7k8TfjVp1YNXyYNDCfmiesZ3CWE6Wt2M+ytn/hxd6bdoSkn078ypbxI0/o1eefuXvxzXB8AxszZxMSF8Rw7k2dzZMpZNOkr5YWu7RDMN4/15/dDOrBmx1GGTP+BlVsO4+rNvcpxmvSV8lIBfr5MHhTOV5OvoWWj2kxetJmHPokjIzvX7tBUNdKkr5SX6xBSl88f6svUGzuxLimTG978kS+3lDvHkXJzmvRVlSsoKubv3yXx1r922x2KqiA/Xx8euq4dqyb3p03j2jy6aDNPfLaFM3mFdoemqpgmfVWl0k7kMPL9n5m1NoUjp3K1jdjNtG9ShyUT+jJ5UDhfbE7j5pk/sTn1hN1hqSqkSV9VKX9fH06dK+Cdu3vxyh099NZ/N+Tn68Pvh3Tg0wl9KSwy3Pn+z7y9NpmiYv0C9wR6c5ZyWG5BEd8nZTKsW1OgZNx3HT7BM5w6V8Czy7fz5ZbD9A9vzIzoSJ220U3ozVmqWhw4fpbb393Awwvi2JN5BkATvgepX8ufmdE9efn27mzcl8Ut2tzj9vSvU1XauqQMbpm1nkMnz/HR2Cja6dR9HklEGN2nJZ8/dDU+PsKoD37mnz/v1+s1bkqTvrpsxhjeWZfCuLm/EtYwkK8evYaBnULsDktVs+5h9fnq0WvoHx7M8yt2MGVxAjn52rvH3TiU9EXkcRHZISLbRWSRiNQUkSARWSMiydayYantnxaRFBFJEpGhjoevnO1sXiGPLIjn9W+TuKVHM5Y9fDUtgnTERm/RILAG/xgTxZNDO/LV1sPc+d7PHDp5zu6w1GWodNIXkebAZCDKGNMN8AWigalAjDEmHIixniMiXazXuwLDgHdFRIf4cyPn2++/3XGEP93UiZnRPXUIZC/k4yNMHNCeOfdfwcGsHIa/vZ64A1l2h6UqyNHmHT+gloj4AYHAYWA4MM96fR4wwlofDiw2xuQZY/YBKUAfB4+vnOSXvce59e1/czQ7l3nj+jD+2nbaHdPLXd+xCV9M7EedAD9Gz97IktiDdoekKqDSSd8Ycwh4A0gF0oFTxpjvgBBjTLq1TTrQxNqlOVD6U5FmlSkX93lcGvd9tJHGdWqwcmJJm65SUHIz1/KJ/biiTUOeXLqVaV/v1P78Ls6R5p2GlJy9twGaAbVF5N6L7VJGWZmfDhEZLyKxIhKbmanjfdvFGMP0Nbt5YskWrmgdxLKH++mMS+p/NAiswdzf9mFs31Z8+NM+JsyP1Qu8LsyR5p3BwD5jTKYxpgBYBlwNHBWRUABrmWFtnwa0KLV/GCXNQf/DGDPbGBNljIkKDtazSjvkFRbx2KcJzIxJZlRUGHN/24f6gf52h6VclL+vDy8M78Zfh3dlbWIGo2f/omP0uyhHkn4qcJWIBEpJ4+4gYBewEhhrbTMWWGGtrwSiRSRARNoA4cAmB46vqsmJs/nc+4+NrEg4zJNDO/LqHT10VitVIff1bc0H90WRdDSb29/dwF7rhj3lOhxp098ILAXigW3We80GXgGGiEgyMMR6jjFmB/AZsBP4BphojClyKHpV5Q6dPMcd729gS9op3r47kokD2usFW3VZhnQJYdHvruJsXiF3vLdBe/a4GB17R/1H8tFsxszZxJm8QubcfwVXtA6yOyTlxg4cP8vYOZtIP5XLzNGRDO3a1O6QvIqOvaMuKj71BCM/+JnCYsNnE/pqwlcOa9WoNsse6UeXZvV4+JM47dLpIjTpK75PyuCeDzfSoJY/yx6+ms6h9ewOSXmIoNo1WPDglfRr35gnl25lzvp9dofk9TTpe7kVCYd4cF4sbYNrs+QhHVJBVb3AGn78Y2wUw7o25cWvdvLmmt06WJuNNOl7sYUbU3ns0wSiWjdk8firCK4bYHdIykMF+Pny9t2RjOwdxoyYZF74cifFehOXLfzsDkDZ4+N/7+OFL3cysFMT3r2nFzX9dQwdVb38fH149Y4e1Kvlz0fr93E6t4DX7uih8y84mSZ9L/TBD3t4eXUiQ7uGMGt0L+2Dr5zGx0d49ubONKjlz9/X7CavsJi37uqJvyZ+p9Gk70WMMcxam8L0Nbv5TUQzpo+K0D825XQiwqODwgnw9+GlVYkUFxtmjo7Uz6KT6E/ZSxhjeOO7JKav2c0dvcL07ErZbvy17Xj25s6s3n6ESQvjyS8stjskr6B/9V7AGMPLqxN5Z90eRvdpwet39sDXR++yVfZ7sH9b/vybLny74yiPLIgnr1Bv0q9umvQ9nDGG175NYvaPexnTtxUv3dYdH034yoX8tl8bXhzelX/tOsrDn2jir26a9D3cm/9K5r3v93DPlS154dauOo6Ocklj+rbmbyO6sTYxg4fmx2nir0aa9D3YrJjk/wyN/Nfh3TThK5d271WtmHZbN9YlZTJ50WYKi7SNvzpo0vdQ7/+wh7+v2c3tkc15+fYe2qSj3MI9V7bi+VtK2vifWLJFZ+GqBtpl0wN9tH4fr6xO5DcRzXh9ZIRetFVuZdw1bcgtLOK1b5Ko6efLy7frdaiqpEnfw8z/eT9//WonN3ZryvRRmvCVe3rk+vbk5hcxc20KNf19+Itej6oymvQ9yPLNh3huxQ4Gd27CjGi92UW5t8eHdOBcQREf/rSPmv6+TL2xkyb+KqBJ30PE7CppA+3bthFv361DKyj3JyL86abO5BYU88GPe6np78vjQzrYHZbb06TvATbuPc4jC+LpElqP2WN66+BpymOICC/c2pXcgiJmxCTTMNCf+/u1sTsst6ZJ381tP3SKB+fF0rxhLeb+9grq1vS3OySlqpSPj/Dy7d05da6Av3y5k4a1azC8Z3O7w3Jb2gbgxvZmnmHsnE3UrenHJw9cSaM6Oh6+8kx+vj7MHB3JlW2CeOKzLXyflGF3SG5Lk76bSj91jvs+2gTA/AevpFmDWjZHpFT1qunvy4djo+gQUpeHP4kn7sAJu0NySw4lfRFpICJLRSRRRHaJSF8RCRKRNSKSbC0bltr+aRFJEZEkERnqePje6cTZfO77aBOnzhUwb1wf2gXXsTskpZyiXk1/5o3rQ0i9AMbN/ZXdR7PtDsntOHqmPwP4xhjTCYgAdgFTgRhjTDgQYz1HRLoA0UBXYBjwrojoFcfLlFtQxIP/jCU1K4cPx0TRrXl9u0NSyqmC6wYw/4ErCfDzYcxHm0g7kWN3SG6l0klfROoB1wIfARhj8o0xJ4HhwDxrs3nACGt9OLDYGJNnjNkHpAB9Knt8b1RUbJiyeDPxqSd4666e9G3XyO6QlLJFi6BA/vlAH3LyC1mffMzucNyKI7132gKZwMciEgHEAVOAEGNMOoAxJl1EmljbNwd+KbV/mlWmKsAYw4tf7uDbHUd5/pYu3NQ91O6QlLJVp6b1WPeH67UDw2VypHnHD+gFvGeMiQTOYjXllKOsW+nKHE1JRMaLSKyIxGZmZjoQoueY/eNe5v18gAevacO4a7SfslKAJvxKcCTppwFpxpiN1vOllHwJHBWRUABrmVFq+xal9g8DDpf1xsaY2caYKGNMVHBwsAMheoYVCYd4eXUiN/cI5U83dbY7HKWUG6t00jfGHAEOikhHq2gQsBNYCYy1ysYCK6z1lUC0iASISBsgHNhU2eN7iw17jvGHJVvo0yaIv4+M0NEGlVIOcfSO3EeBBSJSA9gL/JaSL5LPROQBIBUYCWCM2SEin1HyxVAITDTG6PQ4F5F45DQT5sfRulFtPrwvSodXUEo5zKGkb4xJAKLKeGlQOdtPA6Y5ckxvkXE6l3Ef/0otf1/mjutD/UAdXkEp5Tgde8cFncsv4nf/jOVETgFLHupLc73bVilVRTTpu5jiYsMTSxLYeugUH9zbW2++UkpVKR17x8VMX7ObVduO8PSNnbiha1O7w1FKeRhN+i7k87g03l6XQvQVLfhd/7Z2h6OUxzDGYIxOsg6a9F3Gpn1ZTF22lavbNeKvI7rptHBKVZH8wmKeXLqVOf/eb3coLkGTvgs4cPwsE+bH0qJhIO/d01vntlWqCvn5CNm5BUz7eic/7NY7/DW72OzUuQLGzf0VA8y5/wrtmqlUFfPxEaaP6kmHkLpMWhjPnswzdodkK036NiosKmbSwnhSs3L44N7etG5c2+6QlPJItQP8+HBMFP6+PvxuXiyncgrsDsk2mvRt9PLqRH5KPsa0Ed25sq0Ok6xUdWoRFMj79/bm4IkcJi2Kp7Co2O6QbKFJ3yZL49L4aP0+7r+6NaOuaHHpHZRSDuvTJoi/Du/GT8nHeGlVot3h2EJvzrLB5tQT/OmLbVzdrhHP3qyjZirlTNF9WpJ4JJs5/95Hp6Z1ve6kS8/0nezo6VwmzI8jpF4A79zdCz/tqaOU0z17c2f6hzfmmeXb+HV/lt3hOJVmHCfKLShiwvw4zuQV8uGYKBrWrmF3SEp5JT9fH94e3YuwhoE8ND/Oq+bZ1aTvJMYYnl2+nYSDJ5k+KoJOTevZHZJSXq1+oD8fjokiv6iYCfPjyC3wjpHeNek7ycf/3s/SuDSmDApnWDed31YpV9C+SR1mRPdkZ/ppnl62zSuGatCk7wTrk48xbdUubugSwpRB4XaHo5QqZWCnEB4b1IEvNh9i7ob9dodT7TTpV7ODWSV9gtsF12b6XT11ukOlXNCjA9szuHMIf/t6Fxv3Hrc7nGqlSb8ancsvuXBbXGz4cEwUdQK0h6xSrsjHR5h+VwStggKZuDCe9FPn7A6p2mjSrybGGJ5Zvo1dR04zIzqSVo10iAWlXFm9mv7MHtObc/lFPPRJPHmFnnlhV5N+NflkYyrL4g8xZVA4Azo1sTscpVQFtG9Sl7+PimDLwZP8ecUOu8OpFpr0q0HcgRO8+OUOBnQMZvJAvXCrlDsZ1i2UiQPasfjXgyzcmGp3OFXO4aQvIr4isllEvrKeB4nIGhFJtpYNS237tIikiEiSiAx19NiuKDM7j0cWxBFavxZv3RWpF26VckO/H9KRazsE8+eV24k7cMLucKpUVZzpTwF2lXo+FYgxxoQDMdZzRKQLEA10BYYB74qIbxUc32UUFhXz6KJ4TuYU8N69vXRsfKXclK+PMDO6J6H1a/HIgjgysnPtDqnKOJT0RSQMuBn4R6ni4cA8a30eMKJU+WJjTJ4xZh+QAvRx5Piu5tVvEvllbxYv3dadrs3q2x2OUsoBDQJr8MF9vTl9rpBJCzd7zFDMjp7pvwX8ESj90wgxxqQDWMvzVzGbAwdLbZdmlXmEr7em8+FP+7jvqlbc0TvM7nCUUlWgc2g9Xrq9G5v2ZfH6d0l2h1MlKp30ReQWIMMYE1fRXcooK/OeZxEZLyKxIhKbmen6c1omH83myaVbiGzZgOdu6WJ3OEqpKnRbZBj3XNmSD37Yy3c7jtgdjsMcOdPvB9wqIvuBxcBAEfkEOCoioQDWMsPaPg0oPXB1GHC4rDc2xsw2xkQZY6KCg4MdCLH6ZecWMOGTOAJr+PLuPb2o4acdopTyNM/d0oXuzevzxJItHDh+1u5wHFLpDGWMedoYE2aMaU3JBdq1xph7gZXAWGuzscAKa30lEC0iASLSBggHNlU6chdgjOGPS7dy4HgOs0b3IrR+LbtDUkpVg5r+JSd1PiI8/Em8W4/IWR2npa8AQ0QkGRhiPccYswP4DNgJfANMNMa4708OmLthP6u3H+HJoR3p207nuFXKk7UICuTNuyLYmX6av6x03xu3qmQwGGPM98D31vpxYFA5200DplXFMe2WcPAkL63axeDOTRjfv63d4SilnGBgpxAmDmjHO+v20LtVQ0ZGud9Ui9oAXQknc/KZuCCeJnVr8sbICL0BSykv8vjgDvRt24jnVmxnV/ppu8O5bJr0L1NxseGJz7aQkZ3LO/f0okGgTnmolDfx8/Vh5uhI6tX055EF8ZzOLbA7pMuiSf8yffjTXmISM3jmps70bNHA7nCUUjYIrhvA23f3IjUrh6eWbnWrGbc06V+G2P1ZvPZtEjd1b8rYq1vbHY5SykZ92gQxdVgnVm8/wkfr99kdToVp0q+g42fymLRwMy0a1uKVO3ogou34Snm7B/u3YWjXEF5ZnUh8qnsMzKZJvwKKiw2PfZpAVk4+79zTi3o1dSA1pRSICK/dGUFog5o8unAzp3Jcv31fk34FvLMuhZ+Sj/HCrV11IDWl1H+pX8uft0f3IiM7lyeXbnH59n1N+pewYc8x3vzXbkb0bEb0Fe7XJ1cpVf0iWjTgqWGd+G7nUeZu2G93OBelSf8iMrJzmbwogTaNazPttu7ajq+UKtcD17RhcOcQXlq1i61pJ+0Op1ya9MtRVGyYsiiBM3kFvHdvb2oHVMnNy0opDyUivDGyB8F1Api0cLPL9t/XpF+Ot9em8PPe4/xtRHc6hNS1OxyllBtoEFiDWXdHcujkOaZ+7pr99zXpl2Hj3uPMiNnN7ZHNuVMnRFFKXYberYJ4cmhHVm07wicuOLG6Jv0LnDibz5TFCbRqVJsXR3SzOxyllBsa378t13cM5q9f7WTH4VN2h/NfNOmXYozhD0u2kHU2n1mjI6mj7fhKqUrw8RGmj+pJw0B/Ji3czJm8QrtD+g9N+qV8/O/9xCRm8KebOtGtufbHV0pVXlDtGsyMjuTA8bM888U2l2nf16Rv2ZZ2ipdX72Jw5xAdV0cpVSWubNuI3w/pwIqEw3z660G7wwE06QNwJq+QRxfF07hOAK/fqePqKKWqziPXt6d/eGP+vHIHSUey7Q5Hk74xhme/2EZqVg4zR0fSsLaOj6+Uqjrn2/fr1fJn4sJ4zuXbO0us1yf9pXFpLE84zOODO3BF6yC7w1FKeaDgugG8dVdP9mSe4cWvdtoai1cn/ZSMMzy/Ygd92zbikQHt7Q5HKeXB+rVvzEPXtWPRplRWbUu3LQ6vTfq5BUVMWhhPYA1f3oruia/Oc6uUqma/H9KBiBYNmPr5VtJO5NgSQ6WTvoi0EJF1IrJLRHaIyBSrPEhE1ohIsrVsWGqfp0UkRUSSRGRoVVSgsqZ9vYvEI9m8MSqCkHo17QxFKeUl/H19mBUdSbGBxxYnUFhU7PQYHDnTLwSeMMZ0Bq4CJopIF2AqEGOMCQdirOdYr0UDXYFhwLsi4utI8JX1zfZ05v9ygPHXtmVAxyZ2hKCU8lItGwUy7bZuxB44wcy1KU4/fqWTvjEm3RgTb61nA7uA5sBwYJ612TxghLU+HFhsjMkzxuwDUoA+lT1+ZR3MyuGPS7cSEVafP9zQ0dmHV0ophvcsGdfr7bXJ/LL3uFOPXSVt+iLSGogENgIhxph0KPliAM6fSjcHSt+dkGaVlfV+40UkVkRiMzMzqyJEAAqKipmyeDPGwKzRvajh57WXNJRSNnvh1q60alSbxz9N4MTZfKcd1+GsJyJ1gM+Bx4wxpy+2aRllZd6XbIyZbYyJMsZEBQcHOxrif8yMSSY+9SQv3d6dlo0Cq+x9lVLqctUO8GNmdCTHzuTxlBOHYXYo6YuIPyUJf4ExZplVfFREQq3XQ4EMqzwNKD3fYBhw2JHjX46Ne4/zzroU7uwdxm8imjnrsEopVa7uYfX/M82is4ZhdqT3jgAfAbuMMdNLvbQSGGutjwVWlCqPFpEAEWkDhAObKnv8y3Eqp4DHP02gZVAgf7m1qzMOqZRSFTKuXxuu61AyDHPikYs1llQNR870+wH3AQNFJMF63AS8AgwRkWRgiPUcY8wO4DNgJ/ANMNEYU+33Ixtj+NPybWRk5zEjWodLVkq5Fh8f4Y2REdSr6c/kRZurfZgGR3rvrDfGiDGmhzGmp/VYZYw5bowZZIwJt5ZZpfaZZoxpZ4zpaIxZXTVVuLglcWl8vTWd399QclOEUkq5muC6AUwfFcHuo2f429fVO0yDR3df2XfsLH9ZWTLMwoRr29kdjlJKlevaDsFMuLYtCzam8s326humwWOTfn5hSfdMf18fpt8VocMsKKVc3hM3dKRHWH3+uHQrh06eq5ZjeGzSn75mN1vTTvHqHd0JrV/L7nCUUuqSavj5MDM6kqJiw+PVNEyDRyb9DSnH+ODHPYzu04Jh3ULtDkcppSqsdePa/O22bmzan8U76/ZU+ft7XNI/cTafxz9LoE3j2jx3Sxe7w1FKqct2W2QYI3o2Y+baZOIOnKjS9/aopG+MYeqyrWSdzWdmdCSBNbR7plLKPb04ohuh9Wvy2Kebyc4tqLL39aikv2jTQb7dcZQ/Du1Et+b17Q5HKaUqrV5Nf2ZE9+TwyVyeX7Gjyt7XY5J+SkY2L361g/7hjXngmjZ2h6OUUg7r3SqIRwe254vNh1iRcKhK3tMjkn5eYRGTFyUQWMOPv4+MwEe7ZyqlPMSkAe2JatWQZ7/YzsEsx2fb8oik//o3SexMP81rd/Sgic6CpZTyIH6+Prx5V08AHvvU8W6cbp/0f9ydyT/W7+O+q1oxuEuI3eEopVSVaxEUyN9u60bcgRO8vc6x2bbcOukfP5PHE0u2EN6kDs/c3NnucJRSqtoM79mc2yKbMzMmmbgDWZfeoRxum/SNMfxx6VZOnStg5uhIavrbMt2uUko5zYvDu9K8YS2mLE7gdCW7cbpt0p//ywFiEjN4+sZOdA6tZ3c4SilV7erW9OetuyJJP5XL88u3V+o93DLpJx3JZtrXu7i+YzD3X93a7nCUUspperdqyOSB4SxPOMzyzZffjdPtkn5uQRGTF22mbk0/3hgZQckEXkop5T0mDmhX0o1z+eV343S7pP/K6kSSjmbzxsgIGtcJsDscpZRyuvPdOAWYsnjzZXXjdKukvzbxKHM37Oe3/VpzfccmdoejlFK2Od+NMz71JLPWVrwbp9sk/YzsXJ5cspVOTevy1LBOdoejlFK2O9+Nc9baZGL3V6wbp1sk/eJiw5NLtnImr5BZ2j1TKaX+43K7cbpF0v94w35+2J3Js7d0ITykrt3hKKWUyzjfjfPI6Vyeq0A3TqcnfREZJiJJIpIiIlMvtX1uQRGvrk5kcOcQ7r2ypTNCVEopt3K+G+eKhMN8sTntots6NemLiC/wDnAj0AUYLSIXnd4qNSuHBoH+vHZnD+2eqZRS5TjfjfO55TtIPV5+N05nn+n3AVKMMXuNMfnAYmD4xXbIKyxm+qieBNWu4ZQAlVLKHZXuxvnYp5vL3c7ZSb85cLDU8zSr7L+IyHgRiRWR2Nq+RVwT3thpASqllLsq3Y2zPM5O+mW1z5j/KTBmtjEmyhgT1SYkyAlhKaWUZxjeszkrJ/Ur93VnJ/00oEWp52HA4YvtoM34Sil1eXqENSj3NWcn/V+BcBFpIyI1gGhgpZNjUEopr+XnzIMZYwpFZBLwLeALzDHGVN0070oppS7KqUkfwBizCljl7OMqpZRykztylVJKVQ1N+kop5UXEmP/pMelSRCQbSLI7jmpUHzhldxDVxJPrBlo/d+fp9etojPmfwcqc3qZfCUnGmCi7g6guIjLbGDPe7jiqgyfXDbR+7s4L6hdbVrk279jvS7sDqEaeXDfQ+rk7T69fmdyheSfWk8/0lVKqOpSXO93hTH+23QEopZQbKjN3uvyZvlJKqarjDmf6bqOsCWJEpKeI/CIiCdbIoX0quq9VHiQia0Qk2Vo2dFZ9LohvjohkiMj2UmUVis3V62bFUlb9XheRRBHZKiJfiEiDcvZ1y/qVeu0PImJEpMzhbN25fiLyqBX7DhF5rZx9Xb5+VcoY47QHMIyS7pcpwNRS5Y9a5TuA1y5z3yBgDZBsLRs6s06l4vAF9gBtgRrAFkomivkOuNHa5ibg+4rua7322vn6AlOBV22q37VAL2B7qbJLxuYOdbtI/W4A/Kz1Vz2tflZ5C0qGRTkANPak+gEDgH8BAdbzJu5avyr9WTnxl1JeUvSIXwzQF/i21POnrce3wF1W2WhgYUX3tdaTgFBrPZSSLqz2fFig9QV/VJeMzV3qVlb9LnjtNmCBp9UPWApEAPspO+m7bf2Az4DBl9jHbepXVQ9nNu+UN2vWw8Arxpg8AGNMxmXsi7WcZ63PA0ZUXxUuqrwJYh4DXheRg8AblHyoEJFmIrLqEvsChBhj0gGsZZPqqkAllBmbh9TtQuOA1eA59RORW4FDxpgtF5R7RP2ADkB/EdkoIj+IyBXgUfWrFGcm/fJ+uJ7yiylvgpiHgceNMS2Ax4GPAIwxh40xN11iX7fkaXUTkWeAQmABeEb9RCQQeAZ4/sLXPKF+Fj+gIXAV8CTwmYiIB9WvUpyZ9Mv74XrKL6a8CWLGAsussiWU/NdS0X0BjopIKIC1LOs/IbtUJDZ3rRsAIjIWuAW4x1j/51/AXevXDmgDbBGR/ZTEHS8iTS/Yzl3rByWxLzMlNgHFwIUXq925fpXizKRf3g/XU34x5U0Qcxi4ztpmICUXnCu6L9ZyrLU+FlhRTfFXRkVic9e6ISLDgKeAW40xOeVs5pb1M8ZsM8Y0Mca0Nsa0puRvrJcx5sgFm7pl/SzLKfmbQ0Q6UHI98NgF27hz/SrHWRcPKDmj30vJ2cX5i7FdgYeAF61tOlDSjCMV2dd67XX++0Jumb1/nFTHm4DdlFx0fsYquwaIs2LeCPS2ypsBqy62r1XeCIih5MsiBgiyqW6LgHSggJIE8UB5sblb3S5SvxTr85hgPd73pPpd8Pp+rAu5nlI/K1d8AmwH4oGB7lq/qnw49eYsEbkJeIv/nzVrmvXtOgfoCeQDfzDGrBWRZsA/jNXEU9a+VnkjSq7StwRSgZHGmCynVUoppdyI3pGrlFJeRO/IVUopL6JJXymlvIgmfaWU8iKa9JVSyoto0ldKKS+iSV8ppbyIJn2llPIimvSVUsqL/B+yVQswllVwKgAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['GHI'].plot(figsize=(6,3))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "792c735d",
   "metadata": {},
   "source": [
    "As it's evident there are a lot of missing data around 11 am, and many short periods of data (data islands).\n",
    "\n",
    "For this particular application we would like to remove periods of data which are shorter than 30 minutes, as we suspect these periods may also be effected by whatever error source affected the missing/removed data.\n",
    "\n",
    "To achieve this, we will use `groupby` to aggregate the data into continious periods. Based on the length of each data period, we will assess whether to remove or keep the data.\n",
    "\n",
    "The first step is to define the start and stop of a data gap. To identify whether data for each time step is missing we can apply `.isna()`, which retuns a boolean Series. Then we use `.diff()` which for each time step takes the difference the current value and the previous value. So if two consecutive values were missing, there would be no difference and `.diff()` would return False. However, if a value was missing and the previous value was not (and vice versa), the difference would be plus or minus one, signifying the start or end of a data period.\n",
    "\n",
    "By then taking the cumulative sum of the start/stop time series, each period is thereby assigned a unique iteger, and we have now succesfully distingushed the different periods."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "bc3553bd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['gap_start_stop'] = df['GHI'].isna().diff().abs()\n",
    "\n",
    "df['gap_start_stop_cumsum'] = df['gap_start_stop'].cumsum()\n",
    "\n",
    "df['gap_start_stop_cumsum'].plot(figsize=(6,3))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "254e88be",
   "metadata": {},
   "source": [
    "The next step is then to determine whether a period should be removed or not. This is where the `groupby` operation becomes extremely handy! We group/split the data into different periods based on the column `gap_start_stop_cumsum` and then for each period we determine how many entries it contains. For this we use the `transform` operation on the grouped periods, which returns a dataframe with the same indexes as the original dataframe. The new column, `group_count`, contains the period length for the period which each time step belongs to.\n",
    "\n",
    "The values which belongs to periods with less than 30 entires, are then set to nan."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "8e2ea18d",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['ones'] = 1  # dummy column used for groupby\n",
    "\n",
    "threshold = 30  # threshold value, here set to 30 minutes\n",
    "\n",
    "df['group_count'] = df.groupby('gap_start_stop_cumsum')['ones'].transform('count')\n",
    "\n",
    "# set periods shorter than 30 minutes to nan\n",
    "df.loc[df['group_count']<threshold, 'GHI'] = np.nan"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "afad892a",
   "metadata": {},
   "source": [
    "To verify that the data islands have been removed, we visualize the data again:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "3e131581",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['GHI'].plot(figsize=(6,3))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e70a58f3",
   "metadata": {},
   "source": [
    "It is clear now that all the short data periods have been removed and we are more confident in the validity of our dataset.\n",
    "\n",
    "Notice how the long period of data between the two gaps has not been removed, as the period is longer than the threshold."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "de1f3acf-7dbe-40e0-bf07-677607f5c781",
   "metadata": {
    "tags": [
     "remove_cell"
    ]
   },
   "outputs": [],
   "source": [
    "index = pd.date_range('2021-06-11 06', periods=720, freq='1min')\n",
    "GHI = -1000*np.cos(2*np.pi*np.linspace(0.25,0.75,720))\n",
    "df = pd.DataFrame(index=index, data={'GHI': GHI})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "54c7c3a5",
   "metadata": {
    "tags": [
     "remove_cell"
    ]
   },
   "source": [
    "Add a column called QC_flag, and add four flagged periods:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b9b3c685",
   "metadata": {
    "tags": [
     "remove_cell"
    ]
   },
   "outputs": [],
   "source": [
    "df['QC_flag'] = 0\n",
    "df.loc['2021-06-11 10:00':'2021-06-11 10:25', 'QC_flag'] = 1\n",
    "df.loc['2021-06-11 10:45':'2021-06-11 11:20', 'QC_flag'] = 1\n",
    "df.loc['2021-06-11 11:30':'2021-06-11 12:40', 'QC_flag'] = 1\n",
    "df.loc['2021-06-11 15:39':'2021-06-11 15:40', 'QC_flag'] = 1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a89bc417",
   "metadata": {
    "tags": [
     "remove_cell"
    ]
   },
   "source": [
    "Plot GHI data and the QC_flag column:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "762d3cda",
   "metadata": {
    "tags": [
     "remove_cell"
    ]
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x19f53133670>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(7,3))\n",
    "twinx = ax.twinx()\n",
    "df['GHI'].plot(ax=ax, c='b', ylim=[-1,1100])\n",
    "df['QC_flag'].plot(ax=twinx, c='r', ylim=[-0.01, 1.05])\n",
    "ax.legend(loc='upper left')\n",
    "twinx.legend(loc='upper right')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9b57b494",
   "metadata": {
    "tags": [
     "remove_cell"
    ]
   },
   "source": [
    "Now we would like to remove the small periods between the flags, as there is a high probability that these periods are in fact also errornous, but might just not have been caught by the automatic QC method.\n",
    "\n",
    "In this case we will add also flag any unflagged period which is less than 60 minutes:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "74df508f",
   "metadata": {
    "tags": [
     "remove_cell"
    ]
   },
   "outputs": [],
   "source": [
    "df['gap_start_stop'] = 0\n",
    "df.loc[df['QC_flag'].diff().abs()==1, 'gap_start_stop'] = 1\n",
    "df['gap_start_stop_cumsum'] = df['gap_start_stop'].cumsum()\n",
    "\n",
    "df['ones'] = 1  # dummy column used for groupby\n",
    "\n",
    "df.loc[(df.groupby('gap_start_stop_cumsum')['ones'].transform('count') < 60) & (df['QC_flag']==0), 'QC_flag'] = 1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "978c8050",
   "metadata": {
    "tags": [
     "remove_cell"
    ]
   },
   "source": [
    "Create the same plot again, this time noticing how the QC_flag variable differs:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "388b5886",
   "metadata": {
    "tags": [
     "remove_cell"
    ]
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x19f532263d0>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(7,3))\n",
    "twinx = ax.twinx()\n",
    "df['GHI'].plot(ax=ax, c='b', ylim=[-1,1100])\n",
    "df['QC_flag'].plot(ax=twinx, c='r', ylim=[-0.01, 1.05])\n",
    "ax.legend(loc='upper left')\n",
    "twinx.legend(loc='upper right')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1cce87a1",
   "metadata": {
    "tags": [
     "remove_cell"
    ]
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  },
  "tags": "jupyter",
  "title": "Using GroupBy to remove 'data islands'",
  "toc-autonumbering": false,
  "toc-showcode": true,
  "toc-showmarkdowntxt": true,
  "toc-showtags": false
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
